// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trading.DbContexts;

#nullable disable

namespace Trading.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230613140217_qesrt")]
    partial class qesrt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trading.Models.SaleObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amplituda")
                        .HasColumnType("int");

                    b.Property<int>("HozirgiNarxi")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SotishFarqi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SaleObjects");
                });

            modelBuilder.Entity("Trading.Models.Savdo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Foyda")
                        .HasColumnType("int");

                    b.Property<int>("SaleObjectId")
                        .HasColumnType("int");

                    b.Property<bool>("SotibOlindi")
                        .HasColumnType("bit");

                    b.Property<int>("TraderId")
                        .HasColumnType("int");

                    b.Property<int>("UmumiyHarajat")
                        .HasColumnType("int");

                    b.Property<int>("UmumiyTushum")
                        .HasColumnType("int");

                    b.Property<int>("XaridNarxi")
                        .HasColumnType("int");

                    b.Property<int>("XaridSoni")
                        .HasColumnType("int");

                    b.Property<bool>("isOpen")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SaleObjectId");

                    b.HasIndex("TraderId");

                    b.ToTable("Savdolar");
                });

            modelBuilder.Entity("Trading.Models.Trader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Balansi")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Traderlar");
                });

            modelBuilder.Entity("Trading.Models.Savdo", b =>
                {
                    b.HasOne("Trading.Models.SaleObject", "SaleObject")
                        .WithMany()
                        .HasForeignKey("SaleObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trading.Models.Trader", "Trader")
                        .WithMany("Savdolar")
                        .HasForeignKey("TraderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaleObject");

                    b.Navigation("Trader");
                });

            modelBuilder.Entity("Trading.Models.Trader", b =>
                {
                    b.Navigation("Savdolar");
                });
#pragma warning restore 612, 618
        }
    }
}
